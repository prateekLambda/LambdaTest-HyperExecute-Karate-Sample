{"src/test/java/app/api/call/call-data-four.feature:3":{"file_name":"src/test/java/app/api/call/call-data-four.feature","location":{"line":1,"column":1},"feature_name":"mixing 2 http calls but the second one in a loop","scenario_name":"","scenario_location":{"line":3,"column":3},"steps":[{"type":"Step","location":{"line":4,"column":5},"keyword":"* ","text":"url 'https://jsonplaceholder.typicode.com/users'"},{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":6,"column":5},"keyword":"* ","text":"table data","argument":{"type":"DataTable","location":{"line":7,"column":7},"rows":[{"type":"TableRow","location":{"line":7,"column":7},"cells":[{"type":"TableCell","location":{"line":7,"column":9},"value":"id"},{"type":"TableCell","location":{"line":7,"column":14},"value":"name"}]},{"type":"TableRow","location":{"line":8,"column":7},"cells":[{"type":"TableCell","location":{"line":8,"column":9},"value":"1"},{"type":"TableCell","location":{"line":8,"column":14},"value":"'foo'"}]},{"type":"TableRow","location":{"line":9,"column":7},"cells":[{"type":"TableCell","location":{"line":9,"column":9},"value":"2"},{"type":"TableCell","location":{"line":9,"column":14},"value":"'bar'"}]}]}},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"call read('@called') data"}]},"src/test/java/app/api/call/call-data-one.feature:3":{"file_name":"src/test/java/app/api/call/call-data-one.feature","location":{"line":1,"column":1},"feature_name":"mixing 2 http calls but the second one in a loop","scenario_name":"","scenario_location":{"line":3,"column":3},"steps":[{"type":"Step","location":{"line":4,"column":5},"keyword":"* ","text":"url 'https://jsonplaceholder.typicode.com/users'"},{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":6,"column":5},"keyword":"* ","text":"table data","argument":{"type":"DataTable","location":{"line":7,"column":7},"rows":[{"type":"TableRow","location":{"line":7,"column":7},"cells":[{"type":"TableCell","location":{"line":7,"column":9},"value":"id"},{"type":"TableCell","location":{"line":7,"column":14},"value":"name"}]},{"type":"TableRow","location":{"line":8,"column":7},"cells":[{"type":"TableCell","location":{"line":8,"column":9},"value":"1"},{"type":"TableCell","location":{"line":8,"column":14},"value":"'foo'"}]},{"type":"TableRow","location":{"line":9,"column":7},"cells":[{"type":"TableCell","location":{"line":9,"column":9},"value":"2"},{"type":"TableCell","location":{"line":9,"column":14},"value":"'bar'"}]}]}},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"call read('@called') data"}]},"src/test/java/app/api/call/call-data-single.feature:3":{"file_name":"src/test/java/app/api/call/call-data-single.feature","location":{"line":1,"column":1},"feature_name":"mixing 2 http calls but the second one in a loop","scenario_name":"","scenario_location":{"line":3,"column":3},"steps":[{"type":"Step","location":{"line":4,"column":5},"keyword":"* ","text":"url 'https://jsonplaceholder.typicode.com/users'"},{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":6,"column":5},"keyword":"* ","text":"table data","argument":{"type":"DataTable","location":{"line":7,"column":7},"rows":[{"type":"TableRow","location":{"line":7,"column":7},"cells":[{"type":"TableCell","location":{"line":7,"column":9},"value":"id"},{"type":"TableCell","location":{"line":7,"column":14},"value":"name"}]},{"type":"TableRow","location":{"line":8,"column":7},"cells":[{"type":"TableCell","location":{"line":8,"column":9},"value":"1"},{"type":"TableCell","location":{"line":8,"column":14},"value":"'foo'"}]},{"type":"TableRow","location":{"line":9,"column":7},"cells":[{"type":"TableCell","location":{"line":9,"column":9},"value":"2"},{"type":"TableCell","location":{"line":9,"column":14},"value":"'bar'"}]}]}},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"call read('@called') data"}]},"src/test/java/app/api/call/call-data-two.feature:3":{"file_name":"src/test/java/app/api/call/call-data-two.feature","location":{"line":1,"column":1},"feature_name":"mixing 2 http calls but the second one in a loop","scenario_name":"","scenario_location":{"line":3,"column":3},"steps":[{"type":"Step","location":{"line":4,"column":5},"keyword":"* ","text":"url 'https://jsonplaceholder.typicode.com/users'"},{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":6,"column":5},"keyword":"* ","text":"table data","argument":{"type":"DataTable","location":{"line":7,"column":7},"rows":[{"type":"TableRow","location":{"line":7,"column":7},"cells":[{"type":"TableCell","location":{"line":7,"column":9},"value":"id"},{"type":"TableCell","location":{"line":7,"column":14},"value":"name"}]},{"type":"TableRow","location":{"line":8,"column":7},"cells":[{"type":"TableCell","location":{"line":8,"column":9},"value":"1"},{"type":"TableCell","location":{"line":8,"column":14},"value":"'foo'"}]},{"type":"TableRow","location":{"line":9,"column":7},"cells":[{"type":"TableCell","location":{"line":9,"column":9},"value":"2"},{"type":"TableCell","location":{"line":9,"column":14},"value":"'bar'"}]}]}},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"call read('@called') data"}]},"src/test/java/app/api/call/call-data.feature:3":{"file_name":"src/test/java/app/api/call/call-data.feature","location":{"line":1,"column":1},"feature_name":"mixing 2 http calls but the second one in a loop","scenario_name":"","scenario_location":{"line":3,"column":3},"steps":[{"type":"Step","location":{"line":4,"column":5},"keyword":"* ","text":"url 'https://jsonplaceholder.typicode.com/users'"},{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":6,"column":5},"keyword":"* ","text":"table data","argument":{"type":"DataTable","location":{"line":7,"column":7},"rows":[{"type":"TableRow","location":{"line":7,"column":7},"cells":[{"type":"TableCell","location":{"line":7,"column":9},"value":"id"},{"type":"TableCell","location":{"line":7,"column":14},"value":"name"}]},{"type":"TableRow","location":{"line":8,"column":7},"cells":[{"type":"TableCell","location":{"line":8,"column":9},"value":"1"},{"type":"TableCell","location":{"line":8,"column":14},"value":"'foo'"}]},{"type":"TableRow","location":{"line":9,"column":7},"cells":[{"type":"TableCell","location":{"line":9,"column":9},"value":"2"},{"type":"TableCell","location":{"line":9,"column":14},"value":"'bar'"}]}]}},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"call read('@called') data"}]},"src/test/java/app/api/call/call-four.feature:6":{"file_name":"src/test/java/app/api/call/call-four.feature","location":{"line":1,"column":1},"feature_name":"using a response json array to loop","scenario_name":"get a list of booking ids","scenario_location":{"line":6,"column":3},"steps":[{"type":"Step","location":{"line":7,"column":5},"keyword":"* ","text":"url urlBase"},{"type":"Step","location":{"line":8,"column":5},"keyword":"* ","text":"params { checkin: '2021-01-01', checkout: '2021-01-31' }"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"match each response == { bookingid: '#number' }"},{"type":"Step","location":{"line":13,"column":5},"keyword":"* ","text":"call read('@name=child') response"}]},"src/test/java/app/api/call/call-one.feature:6":{"file_name":"src/test/java/app/api/call/call-one.feature","location":{"line":1,"column":1},"feature_name":"using a response json array to loop","scenario_name":"get a list of booking ids","scenario_location":{"line":6,"column":3},"steps":[{"type":"Step","location":{"line":7,"column":5},"keyword":"* ","text":"url urlBase"},{"type":"Step","location":{"line":8,"column":5},"keyword":"* ","text":"params { checkin: '2021-01-01', checkout: '2021-01-31' }"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"match each response == { bookingid: '#number' }"},{"type":"Step","location":{"line":13,"column":5},"keyword":"* ","text":"call read('@name=child') response"}]},"src/test/java/app/api/call/call-single.feature:6":{"file_name":"src/test/java/app/api/call/call-single.feature","location":{"line":1,"column":1},"feature_name":"using a response json array to loop","scenario_name":"get a list of booking ids","scenario_location":{"line":6,"column":3},"steps":[{"type":"Step","location":{"line":7,"column":5},"keyword":"* ","text":"url urlBase"},{"type":"Step","location":{"line":8,"column":5},"keyword":"* ","text":"params { checkin: '2021-01-01', checkout: '2021-01-31' }"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"match each response == { bookingid: '#number' }"},{"type":"Step","location":{"line":13,"column":5},"keyword":"* ","text":"call read('@name=child') response"}]},"src/test/java/app/api/call/call-three.feature:6":{"file_name":"src/test/java/app/api/call/call-three.feature","location":{"line":1,"column":1},"feature_name":"using a response json array to loop","scenario_name":"get a list of booking ids","scenario_location":{"line":6,"column":3},"steps":[{"type":"Step","location":{"line":7,"column":5},"keyword":"* ","text":"url urlBase"},{"type":"Step","location":{"line":8,"column":5},"keyword":"* ","text":"params { checkin: '2021-01-01', checkout: '2021-01-31' }"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"match each response == { bookingid: '#number' }"},{"type":"Step","location":{"line":13,"column":5},"keyword":"* ","text":"call read('@name=child') response"}]},"src/test/java/app/api/call/call-two.feature:6":{"file_name":"src/test/java/app/api/call/call-two.feature","location":{"line":1,"column":1},"feature_name":"using a response json array to loop","scenario_name":"get a list of booking ids","scenario_location":{"line":6,"column":3},"steps":[{"type":"Step","location":{"line":7,"column":5},"keyword":"* ","text":"url urlBase"},{"type":"Step","location":{"line":8,"column":5},"keyword":"* ","text":"params { checkin: '2021-01-01', checkout: '2021-01-31' }"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"match each response == { bookingid: '#number' }"},{"type":"Step","location":{"line":13,"column":5},"keyword":"* ","text":"call read('@name=child') response"}]},"src/test/java/app/api/data/outline-examples-json.feature:14":{"file_name":"src/test/java/app/api/data/outline-examples-json.feature","location":{"line":1,"column":1},"feature_name":"using nulls and inline json","scenario_name":"","scenario_location":{"line":3,"column":3},"steps":[{"type":"Step","location":{"line":4,"column":5},"keyword":"Given ","text":"url 'https://reqres.in/api'"},{"type":"Step","location":{"line":5,"column":5},"keyword":"And ","text":"path 'register'"},{"type":"Step","location":{"line":6,"column":5},"keyword":"And ","text":"request { email: '#(email)', password: '#(password)' }"},{"type":"Step","location":{"line":7,"column":5},"keyword":"When ","text":"method post"},{"type":"Step","location":{"line":8,"column":5},"keyword":"Then ","text":"status 400"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"print response"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"match response == errorResponse"}],"example":{"data":[{"key":"email!","value":"null"},{"key":"password!","value":"null"},{"key":"errorResponse!","value":"{ error: 'Missing email or username' }"}],"tags":[]}},"src/test/java/app/api/data/outline-examples-json.feature:15":{"file_name":"src/test/java/app/api/data/outline-examples-json.feature","location":{"line":1,"column":1},"feature_name":"using nulls and inline json","scenario_name":"","scenario_location":{"line":3,"column":3},"steps":[{"type":"Step","location":{"line":4,"column":5},"keyword":"Given ","text":"url 'https://reqres.in/api'"},{"type":"Step","location":{"line":5,"column":5},"keyword":"And ","text":"path 'register'"},{"type":"Step","location":{"line":6,"column":5},"keyword":"And ","text":"request { email: '#(email)', password: '#(password)' }"},{"type":"Step","location":{"line":7,"column":5},"keyword":"When ","text":"method post"},{"type":"Step","location":{"line":8,"column":5},"keyword":"Then ","text":"status 400"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"print response"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"match response == errorResponse"}],"example":{"data":[{"key":"email!","value":"'aa'"},{"key":"password!","value":"'bb'"},{"key":"errorResponse!","value":"{ error: 'Note: Only defined users succeed registration' }"}],"tags":[]}},"src/test/java/app/api/data/outline-setup-function.feature:4":{"file_name":"src/test/java/app/api/data/outline-setup-function.feature","location":{"line":1,"column":1},"feature_name":"generating data using a function","scenario_name":"","scenario_location":{"line":4,"column":3},"steps":[{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"def generator =","argument":{"type":"DocString","location":{"line":6,"column":5},"content":"function(i){ \n  if (i == 10) return null; \n  return { name: `cat${i}`, age: i };\n}"}}],"scenario_tags":["@setup"]},"src/test/java/app/api/data/outline-setup.feature:4":{"file_name":"src/test/java/app/api/data/outline-setup.feature","location":{"line":1,"column":1},"feature_name":"two api calls in a loop","scenario_name":"","scenario_location":{"line":4,"column":3},"steps":[{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"def data = [{ id: 1, code: 200}, { id: 2, code: 200}]"}],"scenario_tags":["@setup"]},"src/test/java/app/api/data/outline.feature:14":{"file_name":"src/test/java/app/api/data/outline.feature","location":{"line":1,"column":1},"feature_name":"simple data driven testing","scenario_name":"","scenario_location":{"line":6,"column":3},"steps":[{"type":"Step","location":{"line":7,"column":5},"keyword":"* ","text":"request { title: '#(title)', complete: false }"},{"type":"Step","location":{"line":8,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"match response == { id: '#string', title: '#(title)', complete: false }"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"status 200"}],"example":{"data":[{"key":"title","value":"One"}],"tags":[]}},"src/test/java/app/api/data/outline.feature:15":{"file_name":"src/test/java/app/api/data/outline.feature","location":{"line":1,"column":1},"feature_name":"simple data driven testing","scenario_name":"","scenario_location":{"line":6,"column":3},"steps":[{"type":"Step","location":{"line":7,"column":5},"keyword":"* ","text":"request { title: '#(title)', complete: false }"},{"type":"Step","location":{"line":8,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"match response == { id: '#string', title: '#(title)', complete: false }"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"status 200"}],"example":{"data":[{"key":"title","value":"Two"}],"tags":[]}},"src/test/java/app/api/data/outline.feature:16":{"file_name":"src/test/java/app/api/data/outline.feature","location":{"line":1,"column":1},"feature_name":"simple data driven testing","scenario_name":"","scenario_location":{"line":6,"column":3},"steps":[{"type":"Step","location":{"line":7,"column":5},"keyword":"* ","text":"request { title: '#(title)', complete: false }"},{"type":"Step","location":{"line":8,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"match response == { id: '#string', title: '#(title)', complete: false }"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"status 200"}],"example":{"data":[{"key":"title","value":"Three"}],"tags":[]}},"src/test/java/app/api/interop/interop.feature:3":{"file_name":"src/test/java/app/api/interop/interop.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":3},"steps":[{"type":"Step","location":{"line":4,"column":5},"keyword":"* ","text":"def helper = Java.type('app.api.interop.Helper')"},{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"def result = helper.doWork('hello world')"},{"type":"Step","location":{"line":6,"column":5},"keyword":"* ","text":"match result == { \"message\": \"hello world\" }"}]},"src/test/java/app/api/match/match.feature:3":{"file_name":"src/test/java/app/api/match/match.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"match examples","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def cat =","argument":{"type":"DocString","location":{"line":5,"column":3},"content":"{\n  name: 'Billie',\n  kittens: [\n    { id: 23, name: 'Bob' },\n    { id: 42, name: 'Wild' }\n  ]\n}"}},{"type":"Step","location":{"line":16,"column":1},"keyword":"* ","text":"match cat.kittens[0].name == 'Bob'"},{"type":"Step","location":{"line":19,"column":1},"keyword":"* ","text":"match cat.kittens[*].id == [23, 42]"},{"type":"Step","location":{"line":22,"column":1},"keyword":"* ","text":"match cat.kittens[*].id contains 23"},{"type":"Step","location":{"line":23,"column":1},"keyword":"* ","text":"match cat.kittens[*].id contains [42, 23]"},{"type":"Step","location":{"line":26,"column":1},"keyword":"* ","text":"match cat..name == ['Billie', 'Bob', 'Wild']"},{"type":"Step","location":{"line":29,"column":1},"keyword":"* ","text":"match cat.kittens contains [{ id: 42, name: 'Wild' }, { id: 23, name: 'Bob' }]"},{"type":"Step","location":{"line":32,"column":1},"keyword":"* ","text":"match cat.kittens contains { id: 42, name: '#string' }"}]},"src/test/java/app/api/simple/httpbin.feature:3":{"file_name":"src/test/java/app/api/simple/httpbin.feature","location":{"line":1,"column":1},"feature_name":"simple requests","scenario_name":"simple POST and GET","scenario_location":{"line":3,"column":3},"steps":[{"type":"Step","location":{"line":4,"column":5},"keyword":"* ","text":"url 'https://httpbin.org/anything'"},{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"request { myKey: 'myValue' }"},{"type":"Step","location":{"line":6,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":7,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":8,"column":5},"keyword":"* ","text":"match response.json == { myKey: 'myValue' }"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"path response.json.myKey"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":12,"column":5},"keyword":"* ","text":"status 200"}]},"src/test/java/app/api/simple/jsonplace.feature:6":{"file_name":"src/test/java/app/api/simple/jsonplace.feature","location":{"line":1,"column":1},"feature_name":"sample karate api test script","scenario_name":"get all users and then get the first user by id","scenario_location":{"line":6,"column":3},"steps":[{"type":"Step","location":{"line":7,"column":5},"keyword":"* ","text":"path 'users'"},{"type":"Step","location":{"line":8,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"match response[0] contains { id: 1, name: 'Leanne Graham', website: 'hildegard.org' }"},{"type":"Step","location":{"line":12,"column":5},"keyword":"* ","text":"def first = response[0]"},{"type":"Step","location":{"line":14,"column":5},"keyword":"* ","text":"path 'users', first.id"},{"type":"Step","location":{"line":15,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":16,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":17,"column":5},"keyword":"* ","text":"match response == first"}]},"src/test/java/app/api/simple/restful-booker.feature:6":{"file_name":"src/test/java/app/api/simple/restful-booker.feature","location":{"line":1,"column":1},"feature_name":"API test using RESTfulBooker application","scenario_name":"","scenario_location":{"line":6,"column":1},"steps":[{"type":"Step","location":{"line":8,"column":3},"keyword":"* ","text":"path 'auth'"},{"type":"Step","location":{"line":9,"column":3},"keyword":"* ","text":"request { username: 'admin', password: 'password123' }"},{"type":"Step","location":{"line":10,"column":3},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":11,"column":3},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":12,"column":3},"keyword":"* ","text":"def authToken = response.token"},{"type":"Step","location":{"line":14,"column":3},"keyword":"* ","text":"def booking =","argument":{"type":"DocString","location":{"line":15,"column":3},"content":"{\n  firstname: 'Anthony', lastname: 'ODonnell',\n  totalprice: 500, depositpaid: true,\n  additionalneeds: 'Clearly Defined Requirements',\n  bookingdates: { checkin: '2022-08-30', checkout: '2022-09-10' }\n}"}},{"type":"Step","location":{"line":25,"column":3},"keyword":"* ","text":"path 'booking'"},{"type":"Step","location":{"line":26,"column":3},"keyword":"* ","text":"header Accept = 'application/json'"},{"type":"Step","location":{"line":27,"column":3},"keyword":"* ","text":"request booking"},{"type":"Step","location":{"line":28,"column":3},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":29,"column":3},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":30,"column":3},"keyword":"* ","text":"match response contains { bookingid: '#number', booking: '#(booking)' }"},{"type":"Step","location":{"line":31,"column":3},"keyword":"* ","text":"def bookingid = response.bookingid;"},{"type":"Step","location":{"line":34,"column":3},"keyword":"* ","text":"path 'booking'"},{"type":"Step","location":{"line":35,"column":3},"keyword":"* ","text":"param firstname = booking.firstname"},{"type":"Step","location":{"line":36,"column":3},"keyword":"* ","text":"param lastname = booking.lastname"},{"type":"Step","location":{"line":37,"column":3},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":38,"column":3},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":39,"column":3},"keyword":"* ","text":"match response contains { bookingid: '#(bookingid)' }"},{"type":"Step","location":{"line":40,"column":3},"keyword":"* ","text":"def toDelete = response"},{"type":"Step","location":{"line":43,"column":3},"keyword":"* ","text":"path 'booking'"},{"type":"Step","location":{"line":44,"column":3},"keyword":"* ","text":"param checkin = '2022-07-01'"},{"type":"Step","location":{"line":45,"column":3},"keyword":"* ","text":"param checkout = booking.bookingdates.checkout"},{"type":"Step","location":{"line":46,"column":3},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":47,"column":3},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":48,"column":3},"keyword":"* ","text":"match response contains { bookingid: '#(bookingid)' }"},{"type":"Step","location":{"line":51,"column":3},"keyword":"* ","text":"booking.totalprice = 0"},{"type":"Step","location":{"line":52,"column":3},"keyword":"* ","text":"path 'booking', bookingid"},{"type":"Step","location":{"line":53,"column":3},"keyword":"* ","text":"header Accept = 'application/json'"},{"type":"Step","location":{"line":54,"column":3},"keyword":"* ","text":"header Cookie = 'token=' + authToken"},{"type":"Step","location":{"line":55,"column":3},"keyword":"* ","text":"request booking"},{"type":"Step","location":{"line":56,"column":3},"keyword":"* ","text":"method put"},{"type":"Step","location":{"line":57,"column":3},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":58,"column":3},"keyword":"* ","text":"match response contains booking"},{"type":"Step","location":{"line":61,"column":3},"keyword":"* ","text":"booking.totalprice = 1000"},{"type":"Step","location":{"line":62,"column":3},"keyword":"* ","text":"path 'booking', bookingid"},{"type":"Step","location":{"line":63,"column":3},"keyword":"* ","text":"header Accept = 'application/json'"},{"type":"Step","location":{"line":64,"column":3},"keyword":"* ","text":"header Cookie = 'token=' + authToken"},{"type":"Step","location":{"line":65,"column":3},"keyword":"* ","text":"request { totalprice: 1000 }"},{"type":"Step","location":{"line":66,"column":3},"keyword":"* ","text":"method patch"},{"type":"Step","location":{"line":67,"column":3},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":68,"column":3},"keyword":"* ","text":"match response contains booking"},{"type":"Step","location":{"line":71,"column":3},"keyword":"* ","text":"call read('@delete') toDelete"}]},"src/test/java/app/api/simple/simple.feature:7":{"file_name":"src/test/java/app/api/simple/simple.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"simple crud flow","scenario_location":{"line":7,"column":3},"steps":[{"type":"Step","location":{"line":9,"column":5},"keyword":"* ","text":"request { title: 'First', complete: false }"},{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":12,"column":5},"keyword":"* ","text":"match response == { id: '#string', title: 'First', complete: false }"},{"type":"Step","location":{"line":13,"column":5},"keyword":"* ","text":"def id = response.id"},{"type":"Step","location":{"line":16,"column":5},"keyword":"* ","text":"path id"},{"type":"Step","location":{"line":17,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":18,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":19,"column":5},"keyword":"* ","text":"match response == { id: '#(id)', title: 'First', complete: false }"},{"type":"Step","location":{"line":22,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":23,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":24,"column":5},"keyword":"* ","text":"match response contains [{ id: '#(id)', title: 'First', complete: false }]"},{"type":"Step","location":{"line":27,"column":5},"keyword":"* ","text":"request { title: 'Second', complete: false }"},{"type":"Step","location":{"line":28,"column":5},"keyword":"* ","text":"method post"},{"type":"Step","location":{"line":29,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":30,"column":5},"keyword":"* ","text":"match response == { id: '#string', title: 'Second', complete: false }"},{"type":"Step","location":{"line":31,"column":5},"keyword":"* ","text":"def id = response.id"},{"type":"Step","location":{"line":34,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":35,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":36,"column":5},"keyword":"* ","text":"match response contains [{ id: '#string', title: 'First', complete: false },{ id: '#(id)', title: 'Second', complete: false }]"}]},"src/test/java/app/mock/test-01.feature:3":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:6":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":6,"column":1},"steps":[{"type":"Step","location":{"line":7,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":8,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:9":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":9,"column":1},"steps":[{"type":"Step","location":{"line":10,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":11,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:12":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":12,"column":1},"steps":[{"type":"Step","location":{"line":13,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":14,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:15":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":15,"column":1},"steps":[{"type":"Step","location":{"line":16,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":17,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:18":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":18,"column":1},"steps":[{"type":"Step","location":{"line":19,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":20,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:21":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":21,"column":1},"steps":[{"type":"Step","location":{"line":22,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":23,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:24":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":24,"column":1},"steps":[{"type":"Step","location":{"line":25,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":26,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:27":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":27,"column":1},"steps":[{"type":"Step","location":{"line":28,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":29,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:30":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":30,"column":1},"steps":[{"type":"Step","location":{"line":31,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":32,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:33":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":33,"column":1},"steps":[{"type":"Step","location":{"line":34,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":35,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-01.feature:36":{"file_name":"src/test/java/app/mock/test-01.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":36,"column":1},"steps":[{"type":"Step","location":{"line":37,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":38,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:3":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:6":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":6,"column":1},"steps":[{"type":"Step","location":{"line":7,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":8,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:9":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":9,"column":1},"steps":[{"type":"Step","location":{"line":10,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":11,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:12":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":12,"column":1},"steps":[{"type":"Step","location":{"line":13,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":14,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:15":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":15,"column":1},"steps":[{"type":"Step","location":{"line":16,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":17,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:18":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":18,"column":1},"steps":[{"type":"Step","location":{"line":19,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":20,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:21":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":21,"column":1},"steps":[{"type":"Step","location":{"line":22,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":23,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:24":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":24,"column":1},"steps":[{"type":"Step","location":{"line":25,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":26,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:27":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":27,"column":1},"steps":[{"type":"Step","location":{"line":28,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":29,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:30":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":30,"column":1},"steps":[{"type":"Step","location":{"line":31,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":32,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:33":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":33,"column":1},"steps":[{"type":"Step","location":{"line":34,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":35,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-02.feature:36":{"file_name":"src/test/java/app/mock/test-02.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":36,"column":1},"steps":[{"type":"Step","location":{"line":37,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":38,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:3":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:6":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":6,"column":1},"steps":[{"type":"Step","location":{"line":7,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":8,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:9":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":9,"column":1},"steps":[{"type":"Step","location":{"line":10,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":11,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:12":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":12,"column":1},"steps":[{"type":"Step","location":{"line":13,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":14,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:15":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":15,"column":1},"steps":[{"type":"Step","location":{"line":16,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":17,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:18":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":18,"column":1},"steps":[{"type":"Step","location":{"line":19,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":20,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:21":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":21,"column":1},"steps":[{"type":"Step","location":{"line":22,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":23,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:24":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":24,"column":1},"steps":[{"type":"Step","location":{"line":25,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":26,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:27":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":27,"column":1},"steps":[{"type":"Step","location":{"line":28,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":29,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:30":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":30,"column":1},"steps":[{"type":"Step","location":{"line":31,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":32,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:33":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":33,"column":1},"steps":[{"type":"Step","location":{"line":34,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":35,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-03.feature:36":{"file_name":"src/test/java/app/mock/test-03.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":36,"column":1},"steps":[{"type":"Step","location":{"line":37,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":38,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:3":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:6":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":6,"column":1},"steps":[{"type":"Step","location":{"line":7,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":8,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:9":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":9,"column":1},"steps":[{"type":"Step","location":{"line":10,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":11,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:12":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":12,"column":1},"steps":[{"type":"Step","location":{"line":13,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":14,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:15":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":15,"column":1},"steps":[{"type":"Step","location":{"line":16,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":17,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:18":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":18,"column":1},"steps":[{"type":"Step","location":{"line":19,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":20,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:21":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":21,"column":1},"steps":[{"type":"Step","location":{"line":22,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":23,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:24":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":24,"column":1},"steps":[{"type":"Step","location":{"line":25,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":26,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:27":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":27,"column":1},"steps":[{"type":"Step","location":{"line":28,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":29,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:30":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":30,"column":1},"steps":[{"type":"Step","location":{"line":31,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":32,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:33":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":33,"column":1},"steps":[{"type":"Step","location":{"line":34,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":35,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-04.feature:36":{"file_name":"src/test/java/app/mock/test-04.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":36,"column":1},"steps":[{"type":"Step","location":{"line":37,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":38,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-05.feature:3":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:6":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":6,"column":1},"steps":[{"type":"Step","location":{"line":7,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":8,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:9":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":9,"column":1},"steps":[{"type":"Step","location":{"line":10,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":11,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:12":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":12,"column":1},"steps":[{"type":"Step","location":{"line":13,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":14,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:15":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":15,"column":1},"steps":[{"type":"Step","location":{"line":16,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":17,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:18":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":18,"column":1},"steps":[{"type":"Step","location":{"line":19,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":20,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:21":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":21,"column":1},"steps":[{"type":"Step","location":{"line":22,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":23,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:24":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":24,"column":1},"steps":[{"type":"Step","location":{"line":25,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":26,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:27":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":27,"column":1},"steps":[{"type":"Step","location":{"line":28,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":29,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:30":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":30,"column":1},"steps":[{"type":"Step","location":{"line":31,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":32,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:33":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":33,"column":1},"steps":[{"type":"Step","location":{"line":34,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":35,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-05.feature:36":{"file_name":"src/test/java/app/mock/test-05.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":36,"column":1},"steps":[{"type":"Step","location":{"line":37,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost-5:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":38,"column":1},"keyword":"* ","text":"call read('../api/simple/simple-5.feature')"}]},"src/test/java/app/mock/test-06.feature:3":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:6":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":6,"column":1},"steps":[{"type":"Step","location":{"line":7,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":8,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:9":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":9,"column":1},"steps":[{"type":"Step","location":{"line":10,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":11,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:12":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":12,"column":1},"steps":[{"type":"Step","location":{"line":13,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":14,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:15":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":15,"column":1},"steps":[{"type":"Step","location":{"line":16,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":17,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:18":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":18,"column":1},"steps":[{"type":"Step","location":{"line":19,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":20,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:21":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":21,"column":1},"steps":[{"type":"Step","location":{"line":22,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":23,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:24":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":24,"column":1},"steps":[{"type":"Step","location":{"line":25,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":26,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:27":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":27,"column":1},"steps":[{"type":"Step","location":{"line":28,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":29,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:30":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":30,"column":1},"steps":[{"type":"Step","location":{"line":31,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":32,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:33":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":33,"column":1},"steps":[{"type":"Step","location":{"line":34,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":35,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-06.feature:36":{"file_name":"src/test/java/app/mock/test-06.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"Unique Test Case 1","scenario_location":{"line":36,"column":1},"steps":[{"type":"Step","location":{"line":37,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":38,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:3":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:6":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":6,"column":1},"steps":[{"type":"Step","location":{"line":7,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":8,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:9":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":9,"column":1},"steps":[{"type":"Step","location":{"line":10,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":11,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:12":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":12,"column":1},"steps":[{"type":"Step","location":{"line":13,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":14,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:15":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":15,"column":1},"steps":[{"type":"Step","location":{"line":16,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":17,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:18":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":18,"column":1},"steps":[{"type":"Step","location":{"line":19,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":20,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:21":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":21,"column":1},"steps":[{"type":"Step","location":{"line":22,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":23,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:24":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":24,"column":1},"steps":[{"type":"Step","location":{"line":25,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":26,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:27":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":27,"column":1},"steps":[{"type":"Step","location":{"line":28,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":29,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:30":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":30,"column":1},"steps":[{"type":"Step","location":{"line":31,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":32,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:33":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":33,"column":1},"steps":[{"type":"Step","location":{"line":34,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":35,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-one.feature:36":{"file_name":"src/test/java/app/mock/test-one.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":36,"column":1},"steps":[{"type":"Step","location":{"line":37,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":38,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-single.feature:3":{"file_name":"src/test/java/app/mock/test-single.feature","location":{"line":1,"column":1},"feature_name":"Flaky Test Example","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":3},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":3},"keyword":"* ","text":"def retryCounter = karate.get('retryCounter') || 0"},{"type":"Step","location":{"line":6,"column":3},"keyword":"* ","text":"if (retryCounter < 1) karate.set('retryCounter', retryCounter + 1)"},{"type":"Step","location":{"line":7,"column":3},"keyword":"* ","text":"if (retryCounter < 1) karate.fail('Flaky failure on the first run')"},{"type":"Step","location":{"line":8,"column":3},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-this.feature:3":{"file_name":"src/test/java/app/mock/test-this.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-three.feature:3":{"file_name":"src/test/java/app/mock/test-three.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test-two.feature:3":{"file_name":"src/test/java/app/mock/test-two.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/mock/test.feature:3":{"file_name":"src/test/java/app/mock/test.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":3,"column":1},"steps":[{"type":"Step","location":{"line":4,"column":1},"keyword":"* ","text":"def urlBase = 'http://localhost:' + karate.start({ mock: 'mock.feature', pathPrefix: '/api' }).port"},{"type":"Step","location":{"line":5,"column":1},"keyword":"* ","text":"call read('../api/simple/simple.feature')"}]},"src/test/java/app/ui/data/called.feature:22":{"file_name":"src/test/java/app/ui/data/called.feature","location":{"line":2,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":4,"column":3},"steps":[{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"input('input[name=title]', title + Key.ENTER)"},{"type":"Step","location":{"line":6,"column":5},"keyword":"* ","text":"def find =","argument":{"type":"DocString","location":{"line":7,"column":5},"content":"function fn() {\n  let rows = scriptAll('.border-bottom div', '_.textContent');\n  let count = rows.length;\n  if (count && rows[count-1] == title) {\n    return rows[count-1]\n  } else {\n    return null;\n  }\n}"}},{"type":"Step","location":{"line":18,"column":5},"keyword":"* ","text":"waitUntil(find)"}],"example":{"data":[{"key":"title","value":"One"}],"tags":[]}},"src/test/java/app/ui/data/called.feature:23":{"file_name":"src/test/java/app/ui/data/called.feature","location":{"line":2,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":4,"column":3},"steps":[{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"input('input[name=title]', title + Key.ENTER)"},{"type":"Step","location":{"line":6,"column":5},"keyword":"* ","text":"def find =","argument":{"type":"DocString","location":{"line":7,"column":5},"content":"function fn() {\n  let rows = scriptAll('.border-bottom div', '_.textContent');\n  let count = rows.length;\n  if (count && rows[count-1] == title) {\n    return rows[count-1]\n  } else {\n    return null;\n  }\n}"}},{"type":"Step","location":{"line":18,"column":5},"keyword":"* ","text":"waitUntil(find)"}],"example":{"data":[{"key":"title","value":"Two"}],"tags":[]}},"src/test/java/app/ui/data/called.feature:24":{"file_name":"src/test/java/app/ui/data/called.feature","location":{"line":2,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":4,"column":3},"steps":[{"type":"Step","location":{"line":5,"column":5},"keyword":"* ","text":"input('input[name=title]', title + Key.ENTER)"},{"type":"Step","location":{"line":6,"column":5},"keyword":"* ","text":"def find =","argument":{"type":"DocString","location":{"line":7,"column":5},"content":"function fn() {\n  let rows = scriptAll('.border-bottom div', '_.textContent');\n  let count = rows.length;\n  if (count && rows[count-1] == title) {\n    return rows[count-1]\n  } else {\n    return null;\n  }\n}"}},{"type":"Step","location":{"line":18,"column":5},"keyword":"* ","text":"waitUntil(find)"}],"example":{"data":[{"key":"title","value":"Three"}],"tags":[]}},"src/test/java/app/ui/data/data.feature:9":{"file_name":"src/test/java/app/ui/data/data.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":9,"column":3},"steps":[{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"driver 'http://localhost:8080'"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"call read('called.feature')"}]},"src/test/java/app/ui/edit/edit.feature:9":{"file_name":"src/test/java/app/ui/edit/edit.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":9,"column":3},"steps":[{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"driver 'http://localhost:8080'"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"input('input[name=title]', 'Task One' + Key.ENTER)"},{"type":"Step","location":{"line":12,"column":5},"keyword":"* ","text":"waitFor('.border-bottom div').mouse().doubleClick()"},{"type":"Step","location":{"line":13,"column":5},"keyword":"* ","text":"waitFor('.border-bottom input').clear().input('Task Edit')"},{"type":"Step","location":{"line":14,"column":5},"keyword":"* ","text":"mouse('h1').click()"},{"type":"Step","location":{"line":15,"column":5},"keyword":"* ","text":"waitForText('.border-bottom', 'Task Edit')"}]},"src/test/java/app/ui/hybrid/hybrid.feature:9":{"file_name":"src/test/java/app/ui/hybrid/hybrid.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":9,"column":3},"steps":[{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"driver 'http://localhost:8080'"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"def find = read('find.js')"},{"type":"Step","location":{"line":12,"column":5},"keyword":"* ","text":"input('input[name=title]', 'One' + Key.ENTER)"},{"type":"Step","location":{"line":13,"column":5},"keyword":"* ","text":"def id = waitUntil(() => find('One'))"},{"type":"Step","location":{"line":14,"column":5},"keyword":"* ","text":"print 'created id:', id"},{"type":"Step","location":{"line":16,"column":5},"keyword":"* ","text":"url 'http://localhost:8080/api/todos'"},{"type":"Step","location":{"line":17,"column":5},"keyword":"* ","text":"path id"},{"type":"Step","location":{"line":18,"column":5},"keyword":"* ","text":"method get"},{"type":"Step","location":{"line":19,"column":5},"keyword":"* ","text":"status 200"},{"type":"Step","location":{"line":20,"column":5},"keyword":"* ","text":"match response == { id: '#(id)', title: 'One', complete: false }"}]},"src/test/java/app/ui/simple/google.feature:7":{"file_name":"src/test/java/app/ui/simple/google.feature","location":{"line":1,"column":1},"feature_name":"browser automation demo","scenario_name":"try to login to github","scenario_location":{"line":7,"column":3},"steps":[{"type":"Step","location":{"line":10,"column":5},"keyword":"Given ","text":"driver 'https://github.com/login'"},{"type":"Step","location":{"line":11,"column":5},"keyword":"And ","text":"input('#login_field', 'XXXX')"},{"type":"Step","location":{"line":12,"column":5},"keyword":"And ","text":"input('#password', 'world')"},{"type":"Step","location":{"line":13,"column":5},"keyword":"When ","text":"submit().click(\"input[name=commit]\")"},{"type":"Step","location":{"line":14,"column":5},"keyword":"Then ","text":"match html('.flash-error') contains 'Incorrect username or password.'"},{"type":"Step","location":{"line":15,"column":5},"keyword":"And ","text":"screenshot()"},{"type":"Step","location":{"line":17,"column":5},"keyword":"Given ","text":"driver 'https://google.com'"},{"type":"Step","location":{"line":18,"column":5},"keyword":"And ","text":"input(\"#APjFqb\", 'karate dsl')"},{"type":"Step","location":{"line":19,"column":5},"keyword":"When ","text":"submit().click(\"input[name=btnI]\")"},{"type":"Step","location":{"line":20,"column":5},"keyword":"Then ","text":"waitForUrl('https://github.com/karatelabs/karate')"}]},"src/test/java/app/ui/simple/simple.feature:9":{"file_name":"src/test/java/app/ui/simple/simple.feature","location":{"line":1,"column":1},"feature_name":"","scenario_name":"","scenario_location":{"line":9,"column":3},"steps":[{"type":"Step","location":{"line":10,"column":5},"keyword":"* ","text":"driver 'http://localhost:8080'"},{"type":"Step","location":{"line":11,"column":5},"keyword":"* ","text":"input('input[name=title]', 'Task One' + Key.ENTER)"},{"type":"Step","location":{"line":12,"column":5},"keyword":"* ","text":"waitForText('.border-bottom', 'Task One')"},{"type":"Step","location":{"line":13,"column":5},"keyword":"* ","text":"waitFor('button').click()"},{"type":"Step","location":{"line":14,"column":5},"keyword":"* ","text":"waitUntil(() => locateAll('.border-bottom').length == 0)"}]}}